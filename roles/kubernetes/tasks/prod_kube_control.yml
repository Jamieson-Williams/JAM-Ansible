---
# Tasks to create kubernetes cluster on control nodes. This playbook should only run on control nodes.

- name: Check if control node is part of kubernetes cluster
  become: true
  ansible.builtin.shell:
    cmd: "export KUBECONFIG=/etc/kubernetes/admin.conf; kubectl get nodes --no-headers | grep -i {{ inventory_hostname }}"
  register: node_in_cluster
  changed_when: false
  failed_when: false

- name: Create kubernetes cluster
  become: true
  ansible.builtin.command:
    cmd: kubeadm init --pod-network-cidr 10.244.0.0/16
  when: node_in_cluster is defined and node_in_cluster.stdout | length == 0

- name: Configure kubectl for cluster administrator users
  become: true
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: "/home/{{ item }}/.kube/config"
    remote_src: true
    owner: "{{ item }}"
    group: "{{ item }}"
    mode: preserve
  loop:
    - "{{ kubernetes_admin_user }}"
    - "{{ kubernetes_ansible_user }}"

- name: Add KUBECONFIG to env on kubernetes control
  become: true
  ansible.builtin.lineinfile:
    path: "{{ item }}/.bashrc"
    regexp: ^export KUBECONFIG
    line: export KUBECONFIG="{{ item }}/.kube/config"
  loop:
    - "{{ kubernetes_admin_dir }}"
    - "{{ kubernetes_ansible_dir }}"

- name: Check if Calico manifest has been applied already
  ansible.builtin.shell: |
    kubectl get pods -A | grep 'calico'
  register: calico_check
  ignore_errors: true
  changed_when: false

- name: Install Calico for networking kubernetes cluster pods if not already applied
  ansible.builtin.shell: |
    kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.28.2/manifests/calico.yaml
    kubectl apply -f https://docs.projectcalico.org/manifests/tigera-operator.yaml
  when: calico_check.rc != 0

- name: Check if MetalLB is already installed (namespace metallb-system exists)
  ansible.builtin.shell: |
    kubectl get ns metallb-system --no-headers
  register: metallb_installed
  ignore_errors: true
  changed_when: false

- name: Install MetalLB if not already installed
  ansible.builtin.shell: |
    kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.14.9/config/manifests/metallb-native.yaml
  when: metallb_installed.rc !=0

- name: Check control-plane taint is set to NoSchedule
  ansible.builtin.shell: |
    kubectl describe node {{ inventory_hostname }} | grep "node-role.kubernetes.io/control-plane:NoSchedule"
  register: taint_check
  ignore_errors: true
  changed_when: false

- name: Ensure control node taint is set to NoSchedule
  ansible.builtin.shell: |
    kubectl taint nodes {{ inventory_hostname }} node-role.kubernetes.io/control-plane=:NoSchedule
  when: taint_check.rc != 0