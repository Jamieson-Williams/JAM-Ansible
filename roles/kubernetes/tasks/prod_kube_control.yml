---
# Tasks to create kubernetes cluster on control nodes. This playbook should only run on control nodes.

- name: Check if control node is part of kubernetes cluster
  become: true
  ansible.builtin.shell:
    cmd: "export KUBECONFIG=/etc/kubernetes/admin.conf; kubectl get nodes --no-headers | grep -i {{ inventory_hostname }}"
  register: node_in_cluster
  changed_when: false
  failed_when: false

- name: Create kubernetes cluster
  become: true
  ansible.builtin.command:
    cmd: kubeadm init --pod-network-cidr 10.244.0.0/16
  when: node_in_cluster is defined and node_in_cluster.stdout | length == 0

- name: Configure kubectl for cluster administrator users
  become: true
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: "/home/{{ item }}/.kube/config"
    remote_src: true
    owner: "{{ item }}"
    group: "{{ item }}"
    mode: preserve
  loop:
    - "{{ kubernetes_admin_user }}"
    - "{{ kubernetes_ansible_user }}"

- name: Add KUBECONFIG to env on kubernetes control
  become: true
  ansible.builtin.lineinfile:
    path: "{{ item }}/.bashrc"
    regexp: ^export KUBECONFIG
    line: export KUBECONFIG="{{ item }}/.kube/config"
  loop:
    - "{{ kubernetes_admin_dir }}"
    - "{{ kubernetes_ansible_dir }}"

#- name: Configure kubectl for cluster administrator users
#  become: yes
#  ansible.builtin.shell: |
#    - mkdir -p {{ kubernetes_admin_dir }}/.kube
#    - sudo cp -i /etc/kubernetes/admin.conf {{ kubernetes_admin_dir }}/.kube/config
#    - sudo chown $(id -u {{ kubernetes_admin_user }}):(id -g {{ kubernetes_admin_user }}) {{ kubernetes_admin_dir }}/.kube/config
